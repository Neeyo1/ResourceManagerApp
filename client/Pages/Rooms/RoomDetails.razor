@page "/rooms/{roomId:int}"
@using Microsoft.AspNetCore.Authorization
@using client.DTOs.Room
@using client.Helpers
@inject ApiClient apiClient
@inject NavigationManager NavigationManager
@inject IToastService ToastService

@attribute [Authorize]

<h3>Room details</h3>

@if (room == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Capacity</th>
                <th>RoomType</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@room.Id</td>
                <td>@room.Name</td>
                <td>@room.Capacity</td>
                <td>@room.RoomType</td>
                <td>
                    <a class="btn btn-primary">View reservations</a>
                    <AuthorizeView Policy="RequireAdminRole">
                        <a class="btn btn-secondary" href="/rooms/@room.Id/update">Update</a>
                        <a class="btn btn-danger" href="/rooms/@room.Id/delete">Delete</a>
                    </AuthorizeView>
                </td>
            </tr>
        </tbody>
    </table>
}

@code {
    private RoomDto? room;

    [Parameter]
    public int RoomId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadRoomData(RoomId);
    }

    private async Task LoadRoomData(int roomId)
    {
        var response = await apiClient.GetAsync($"rooms/{roomId}");
        if (response.IsSuccessStatusCode)
        {
            room = await response.Content.ReadFromJsonAsync<RoomDto>();
            if (room == null)
            {
                ToastService.ShowError("Failed to fetch room data");
            }
        }
        else
        {
            ToastService.ShowError(response.StatusCode.ToString());
            NavigationManager.NavigateTo("/rooms");
        }
    }
}
