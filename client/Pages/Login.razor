@using System.ComponentModel.DataAnnotations
@using shared.DTOs.Account
@using client.Helpers
@inject ApiClient apiClient
@inject ApiAuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@page "/login"

<h3>Login</h3>

<input @bind="Model.Email" placeholder="Email" />
<input @bind="Model.Password" type="password" placeholder="Password" />
<button @onclick="LoginUser">Login</button>

@code {
    private LoginDto Model { get; set; } = new()
    {
        Email = string.Empty,
        Password = string.Empty
    };

    private async Task LoginUser()
    {
        var response = await apiClient.PostAsJsonWithCredentialsAsync("account/login", Model);
        if (response.IsSuccessStatusCode)
        {
            var user = await response.Content.ReadFromJsonAsync<UserDto>();
            if (user == null || user.Token == null)
            {
                ToastService.ShowError("Failed to fetch user data");
                return;
            }
            await AuthStateProvider.MarkUserAsAuthenticated(user.Token);
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            ToastService.ShowError(response.StatusCode.ToString());
        }
    }
}
